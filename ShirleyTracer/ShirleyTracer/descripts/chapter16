
World* build() {
	
	int nx = 600;
	int ny = 400;
	int ns = 16;

	World* w = new World;
	vec3 lookfrom(2, 2.5, 15);
	vec3 lookat(3, 2.5, 0);
	float dist_to_focus = (lookfrom-lookat).length();
	float aperture = 0.0;
	float distance = 700;

	// an temporary method to deal with it
	float vfov = 2*atan2(200,distance)*180/M_PI;
	// default up vector vec3(0,1,0)
	Camera* c = new Camera(lookfrom, lookat, vec3(0, 1, 0), vfov, float(nx) / float(ny), aperture, dist_to_focus);
	w->camera_ptr = c;
	w->integrator_ptr = new RayCastIntegrator(w);
	w->nx = nx;
	w->ny = ny;
	w->ns = ns;

	w->ambient_ptr = new Ambient_Light(0.5,vec3(1.0,1.0,1.0));

	DirectionLight* light_ptr1 = new DirectionLight;
	light_ptr1->set_direction(vec3(200, 150, 125));
	light_ptr1->scale_radiance(4.0);
	light_ptr1->set_shadows(true);				// for Figure 16.1(b)
	w->add_light(light_ptr1);


	PointLight* light_ptr3 = new PointLight(4.0, vec3(1.0, 1.0, 1.0), vec3(-12, 15, 30));
//	light_ptr3->set_shadows(true);
	w->add_light(light_ptr3);

	Matte* matte_ptr1 = new Matte;
	matte_ptr1->set_ka(0.3);
	matte_ptr1->set_kd(0.3);
	matte_ptr1->set_cd(0.5, 0.6, 0);

	sphere*	sphere_ptr1 = new sphere(vec3(0.0, 2.4, 0), 1.5);
	sphere_ptr1->set_material(matte_ptr1);
	w->add_object(sphere_ptr1);

	Matte* matte_ptr3 = new Matte;
	matte_ptr3->set_ka(0.35);
	matte_ptr3->set_kd(0.50);
	matte_ptr3->set_cd(0, 0.5, 0.5);      // cyan

	Triangle* triangle_ptr1 = new Triangle(vec3(1.5, -0.5, 1.8), 		// front
		vec3(7.5, -0.5, -9.00), 		// back
		vec3(2.35, 5.8, 1.4));		// top									
	triangle_ptr1->set_material(matte_ptr3);
	w->add_object(triangle_ptr1);

	// cylinder

	float bottom = -0.5;
	float top = 1.0;
	float radius = 1.0;

	Matte* matte_ptr2 = new Matte();
	matte_ptr2->set_ka(0.2);
	matte_ptr2->set_kd(0.3);
	matte_ptr2->set_cd(0.8, 0.5, 0);

	cylinder* cylinder_ptr = new cylinder(bottom, top, radius);
	cylinder_ptr->set_material(matte_ptr2);
	w->add_object(cylinder_ptr);

	// ground plane

	Matte* matte_ptr4 = new Matte;
	matte_ptr4->set_ka(0.1);
	matte_ptr4->set_kd(0.2);
	matte_ptr4->set_cd(vec3(1.0,1.0,1.0));

	Plane* plane_ptr = new Plane(vec3(0, -0.5, 0), vec3(0, 1, 0));
	plane_ptr->set_material(matte_ptr4);
	w->add_object(plane_ptr);


	w->background_color = vec3(0.0, 0, 0);

	return w;
}